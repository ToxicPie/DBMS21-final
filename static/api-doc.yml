openapi: '3.0.3'

info:
  description: >
    The API of Team 3's final project of NCTU 2021 Spring Introduction To Database Systems course.
  version: '0.1'
  title: 'DBMS Final Project API'
  license:
    name: 'MIT'
    url: 'https://mit-license.org/'

servers:
- url: 'http://localhost/api'
  description: Local testing server

tags:
- name: Bazaar
  description: 'Interactions with the Hypixel Bazaar database'

schemes:
- https
- http

paths:
  /bazaar/products:
    get:
      tags:
        - Bazaar
      summary: 'Bazaar product list'
      description: 'Fetches a list of Bazaar products available.'
      parameters:
      - name: all
        in: query
        description: >
          If `true`, returns a list of all products. Otherwise, only returns the products currently available on Bazaar.
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: 'A successful response'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    product_id:
                      type: string
                      description: 'The ID of a product.'
                    name:
                      type: string
                      description: 'The display name of a product.'
                example:
                - product_id: ENCHANTED_DIAMOND
                  name: Enchanted Diamond
                - product_id: POTATO
                  name: Potato

  /bazaar/search:
    get:
      tags:
        - Bazaar
      summary: 'Search for a product'
      description: >
        Search for matching Bazaar products by their names. This search is case-insensitive.
        In exact mode, it returns the products with the exact same name as given.
        In non-exact mode, it returns a list of products which contain the query string as a substring.
      parameters:
      - name: query
        in: query
        required: true
        description: >
          The name of the product to search for.
        schema:
          type: string
      - name: exact
        in: query
        description: >
          If `true`, only return exact matches.
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: 'A successful response'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    product_id:
                      type: string
                      description: 'The ID of the product.'
                    name:
                      type: string
                      description: 'The display name of the product.'
                example:
                - product_id: TARANTULA_SILK
                  name: Tarantula Silk
                - product_id: TARANTULA_WEB
                  name: Tarantula Web

  /bazaar/status:
    get:
      tags:
        - Bazaar
      summary: 'Bazaar product status'
      description: >
        Fetches the current Bazaar status of the given product(s). The result is cached on the server for 10 minutes.
      parameters:
      - name: product_id
        in: query
        description: >
          A list containing the ID's of products to fetch the statistics for. If an empty list is given, returns the stats of all available products.
        schema:
          type: array
          items:
            type: string
          default: []
        examples:
          good:
            value: ['PORK', 'DIAMOND']
            summary: A valid request.
          bad:
            value: ['SCHMETTERLING']
            summary: An invalid request.
      responses:
        '200':
          description: 'A successful response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  updated_on:
                    type: integer
                    format: int64
                    description: >
                      The last time when the stats were updated from official sources. This value is given as the number of milliseconds since the Unix epoch.
                  result:
                    type: array
                    description: 'A list of product stats.'
                    items:
                      type: object
                      properties:
                        product_id:
                          type: string
                          description: 'The product ID.'
                        buy_price:
                          type: number
                          description: 'The buy price of the product. This value is given with exactly one decimal digit.'
                        buy_volume:
                          type: integer
                          format: int64
                          description: 'The total buy volume of the product.'
                        sell_price:
                          type: number
                          description: 'The sell price of the product. This value is given with exactly one decimal digit.'
                        sell_volume:
                          type: integer
                          format: int64
                          description: 'The total sell volume of the product.'
              example:
                updated_on: 1622688894434
                result:
                - product_id: PORK
                  buy_price: 11.8
                  buy_volume: 881753
                  sell_price: 7.4
                  sell_volume: 881409
                - product_id: DIAMOND
                  buy_price: 7.8
                  buy_volume: 968240
                  sell_price: 7.5
                  sell_volume: 3574635
        '400':
          description: 'A bad request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: 'A string describing the error occurred while processing the request.'
                example:
                - error: '"SCHMETTERLING" is not a valid product ID.'
